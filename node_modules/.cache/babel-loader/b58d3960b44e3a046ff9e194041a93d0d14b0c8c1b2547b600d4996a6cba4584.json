{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mythz\\\\Desktop\\\\student portal\\\\student-portal\\\\src\\\\context\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [fontSize, setFontSize] = useState('medium');\n  const [highContrast, setHighContrast] = useState(false);\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    const savedFontSize = localStorage.getItem('fontSize');\n    const savedHighContrast = localStorage.getItem('highContrast') === 'true';\n    if (savedTheme === 'dark') {\n      setIsDarkMode(true);\n      document.documentElement.classList.add('dark');\n    }\n    if (savedFontSize) {\n      setFontSize(savedFontSize);\n    }\n    if (savedHighContrast) {\n      setHighContrast(true);\n      document.documentElement.classList.add('high-contrast');\n    }\n  }, []);\n  const toggleDarkMode = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    if (newMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n  const handleSetFontSize = size => {\n    setFontSize(size);\n    localStorage.setItem('fontSize', size);\n\n    // Apply font size classes\n    document.documentElement.classList.remove('text-sm', 'text-base', 'text-lg');\n    const sizeClass = size === 'small' ? 'text-sm' : size === 'large' ? 'text-lg' : 'text-base';\n    document.documentElement.classList.add(sizeClass);\n  };\n  const toggleHighContrast = () => {\n    const newContrast = !highContrast;\n    setHighContrast(newContrast);\n    if (newContrast) {\n      document.documentElement.classList.add('high-contrast');\n      localStorage.setItem('highContrast', 'true');\n    } else {\n      document.documentElement.classList.remove('high-contrast');\n      localStorage.setItem('highContrast', 'false');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode,\n      fontSize,\n      setFontSize: handleSetFontSize,\n      highContrast,\n      toggleHighContrast\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"c5jmWDWr7cwjIVbcLNefcBd0N9Y=\");\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","fontSize","setFontSize","highContrast","setHighContrast","savedTheme","localStorage","getItem","savedFontSize","savedHighContrast","document","documentElement","classList","add","toggleDarkMode","newMode","setItem","remove","handleSetFontSize","size","sizeClass","toggleHighContrast","newContrast","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/mythz/Desktop/student portal/student-portal/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface ThemeContextType {\n  isDarkMode: boolean;\n  toggleDarkMode: () => void;\n  fontSize: 'small' | 'medium' | 'large';\n  setFontSize: (size: 'small' | 'medium' | 'large') => void;\n  highContrast: boolean;\n  toggleHighContrast: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [fontSize, setFontSize] = useState<'small' | 'medium' | 'large'>('medium');\n  const [highContrast, setHighContrast] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    const savedFontSize = localStorage.getItem('fontSize') as 'small' | 'medium' | 'large';\n    const savedHighContrast = localStorage.getItem('highContrast') === 'true';\n\n    if (savedTheme === 'dark') {\n      setIsDarkMode(true);\n      document.documentElement.classList.add('dark');\n    }\n    if (savedFontSize) {\n      setFontSize(savedFontSize);\n    }\n    if (savedHighContrast) {\n      setHighContrast(true);\n      document.documentElement.classList.add('high-contrast');\n    }\n  }, []);\n\n  const toggleDarkMode = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    \n    if (newMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n\n  const handleSetFontSize = (size: 'small' | 'medium' | 'large') => {\n    setFontSize(size);\n    localStorage.setItem('fontSize', size);\n    \n    // Apply font size classes\n    document.documentElement.classList.remove('text-sm', 'text-base', 'text-lg');\n    const sizeClass = size === 'small' ? 'text-sm' : size === 'large' ? 'text-lg' : 'text-base';\n    document.documentElement.classList.add(sizeClass);\n  };\n\n  const toggleHighContrast = () => {\n    const newContrast = !highContrast;\n    setHighContrast(newContrast);\n    \n    if (newContrast) {\n      document.documentElement.classList.add('high-contrast');\n      localStorage.setItem('highContrast', 'true');\n    } else {\n      document.documentElement.classList.remove('high-contrast');\n      localStorage.setItem('highContrast', 'false');\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{\n      isDarkMode,\n      toggleDarkMode,\n      fontSize,\n      setFontSize: handleSetFontSize,\n      highContrast,\n      toggleHighContrast\n    }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW9E,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,SAASC,aAAaA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EACzE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAA+B,QAAQ,CAAC;EAChF,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,aAAa,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAiC;IACtF,MAAME,iBAAiB,GAAGH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK,MAAM;IAEzE,IAAIF,UAAU,KAAK,MAAM,EAAE;MACzBL,aAAa,CAAC,IAAI,CAAC;MACnBU,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD;IACA,IAAIL,aAAa,EAAE;MACjBN,WAAW,CAACM,aAAa,CAAC;IAC5B;IACA,IAAIC,iBAAiB,EAAE;MACrBL,eAAe,CAAC,IAAI,CAAC;MACrBM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;IACzD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAG,CAAChB,UAAU;IAC3BC,aAAa,CAACe,OAAO,CAAC;IAEtB,IAAIA,OAAO,EAAE;MACXL,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CP,YAAY,CAACU,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLN,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACK,MAAM,CAAC,MAAM,CAAC;MACjDX,YAAY,CAACU,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,IAAkC,IAAK;IAChEjB,WAAW,CAACiB,IAAI,CAAC;IACjBb,YAAY,CAACU,OAAO,CAAC,UAAU,EAAEG,IAAI,CAAC;;IAEtC;IACAT,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACK,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,CAAC;IAC5E,MAAMG,SAAS,GAAGD,IAAI,KAAK,OAAO,GAAG,SAAS,GAAGA,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,WAAW;IAC3FT,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAACO,SAAS,CAAC;EACnD,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,WAAW,GAAG,CAACnB,YAAY;IACjCC,eAAe,CAACkB,WAAW,CAAC;IAE5B,IAAIA,WAAW,EAAE;MACfZ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;MACvDP,YAAY,CAACU,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC;IAC9C,CAAC,MAAM;MACLN,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACK,MAAM,CAAC,eAAe,CAAC;MAC1DX,YAAY,CAACU,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC;IAC/C;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAC5BzB,UAAU;MACVe,cAAc;MACdb,QAAQ;MACRC,WAAW,EAAEgB,iBAAiB;MAC9Bf,YAAY;MACZkB;IACF,CAAE;IAAAxB,QAAA,EACCA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAAC9B,EAAA,CAvEeF,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAyE7B,OAAO,SAASkC,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG3C,UAAU,CAACK,YAAY,CAAC;EACxC,IAAIsC,OAAO,KAAKrC,SAAS,EAAE;IACzB,MAAM,IAAIsC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}